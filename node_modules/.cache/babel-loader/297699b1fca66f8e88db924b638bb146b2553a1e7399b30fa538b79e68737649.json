{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chiara\\\\Desktop\\\\SOFTWAVE\\\\Esercizi\\\\Lezione 4 -Esercizi (useEffect)\\\\pomodoro-app\\\\src\\\\components\\\\Timer.jsx\";\nimport React from 'react';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport PauseButton from './PauseButton';\nimport PlayButton from './PlayButton';\nimport SettingsButton from './SettingsButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timer = _ref => {\n  let {\n    handleClickSettings,\n    timerLength,\n    workBreak,\n    isPaused,\n    mode,\n    secondsLeft,\n    setIsPaused\n  } = _ref;\n  const totalSeconds = mode === 'work' ? timerLength : workBreak * 60;\n  const percentage = Math.round(secondsLeft / totalSeconds * 100);\n  const minutes = Math.floor(secondsLeft / 60);\n  let seconds = secondsLeft % 60;\n  if (seconds < 10) seconds = '0' + seconds;\n  const handlePause = () => {\n    setIsPaused(isPaused);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CircularProgressbar, {\n      value: percentage,\n      text: minutes + ':' + seconds,\n      styles: buildStyles({\n        strokeLinecap: 'round',\n        textColor: '#fff',\n        pathColor: '#77a6b6',\n        trailColor: '#c9ffe2'\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '20px'\n      },\n      children: [isPaused ? /*#__PURE__*/_jsxDEV(PlayButton, {\n        onClick: handlePause\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(PauseButton, {\n        onClick: handlePause\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(SettingsButton, {\n          onClick: handleClickSettings\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","CircularProgressbar","buildStyles","PauseButton","PlayButton","SettingsButton","Timer","handleClickSettings","timerLength","workBreak","isPaused","mode","secondsLeft","setIsPaused","totalSeconds","percentage","Math","round","minutes","floor","seconds","handlePause","strokeLinecap","textColor","pathColor","trailColor","margin","marginTop"],"sources":["C:/Users/Chiara/Desktop/SOFTWAVE/Esercizi/Lezione 4 -Esercizi (useEffect)/pomodoro-app/src/components/Timer.jsx"],"sourcesContent":["import React from 'react';\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\nimport PauseButton from './PauseButton';\r\nimport PlayButton from './PlayButton';\r\nimport SettingsButton from './SettingsButton';\r\n\r\n\r\nconst Timer = ({ handleClickSettings, timerLength, workBreak, isPaused, mode, secondsLeft, setIsPaused }) => {\r\n\r\n  const totalSeconds = mode === 'work'\r\n  ? timerLength\r\n  : workBreak * 60;\r\nconst percentage = Math.round(secondsLeft / totalSeconds * 100);\r\n\r\nconst minutes = Math.floor(secondsLeft / 60);\r\nlet seconds = secondsLeft % 60;\r\nif(seconds < 10) seconds = '0'+ seconds;\r\n\r\nconst handlePause = () => {\r\n  setIsPaused(isPaused)\r\n}\r\n\r\n  return (\r\n    <div>\r\n        <CircularProgressbar \r\n        value={percentage} \r\n        text={minutes + ':' + seconds} \r\n        styles={buildStyles( {\r\n            strokeLinecap: 'round', \r\n            textColor: '#fff', pathColor:'#77a6b6', trailColor:'#c9ffe2'\r\n        })} />\r\n    <div style={{ margin:'20px'}}>\r\n      {\r\n        isPaused ? \r\n        <PlayButton onClick={handlePause} />\r\n        :\r\n        <PauseButton onClick={handlePause} />\r\n      }\r\n       \r\n       \r\n        <div style={{ marginTop: '20px'}}>\r\n            <SettingsButton onClick={handleClickSettings}/>\r\n        </div>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Timer"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,EAAEC,WAAW,QAAQ,4BAA4B;AAC7E,OAAO,4CAA4C;AAEnD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,cAAc,MAAM,kBAAkB;AAAC;AAG9C,MAAMC,KAAK,GAAG,QAA+F;EAAA,IAA9F;IAAEC,mBAAmB;IAAEC,WAAW;IAAEC,SAAS;IAAEC,QAAQ;IAAEC,IAAI;IAAEC,WAAW;IAAEC;EAAY,CAAC;EAEtG,MAAMC,YAAY,GAAGH,IAAI,KAAK,MAAM,GAClCH,WAAW,GACXC,SAAS,GAAG,EAAE;EAClB,MAAMM,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACL,WAAW,GAAGE,YAAY,GAAG,GAAG,CAAC;EAE/D,MAAMI,OAAO,GAAGF,IAAI,CAACG,KAAK,CAACP,WAAW,GAAG,EAAE,CAAC;EAC5C,IAAIQ,OAAO,GAAGR,WAAW,GAAG,EAAE;EAC9B,IAAGQ,OAAO,GAAG,EAAE,EAAEA,OAAO,GAAG,GAAG,GAAEA,OAAO;EAEvC,MAAMC,WAAW,GAAG,MAAM;IACxBR,WAAW,CAACH,QAAQ,CAAC;EACvB,CAAC;EAEC,oBACE;IAAA,wBACI,QAAC,mBAAmB;MACpB,KAAK,EAAEK,UAAW;MAClB,IAAI,EAAEG,OAAO,GAAG,GAAG,GAAGE,OAAQ;MAC9B,MAAM,EAAElB,WAAW,CAAE;QACjBoB,aAAa,EAAE,OAAO;QACtBC,SAAS,EAAE,MAAM;QAAEC,SAAS,EAAC,SAAS;QAAEC,UAAU,EAAC;MACvD,CAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,eACV;MAAK,KAAK,EAAE;QAAEC,MAAM,EAAC;MAAM,CAAE;MAAA,WAEzBhB,QAAQ,gBACR,QAAC,UAAU;QAAC,OAAO,EAAEW;MAAY;QAAA;QAAA;QAAA;MAAA,QAAG,gBAEpC,QAAC,WAAW;QAAC,OAAO,EAAEA;MAAY;QAAA;QAAA;QAAA;MAAA,QAAG,eAIrC;QAAK,KAAK,EAAE;UAAEM,SAAS,EAAE;QAAM,CAAE;QAAA,uBAC7B,QAAC,cAAc;UAAC,OAAO,EAAEpB;QAAoB;UAAA;UAAA;UAAA;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA,QAC7C;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEV,CAAC;AAAA,KAvCKD,KAAK;AAyCX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}